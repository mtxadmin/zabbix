# Здесь просто подгружаем файл с функциями и запускаем их.
# Эта двухступенчатая схема сделана, чтобы не запускать реальные опросы портов при тестировании, а подсовывать синтетические фиксированные данные для различных сценариев
# Тестовые сценарии смотрите, изменяйте и добавляйте в DCs_availability_functions.Tests.ps1
# Реализацию обработок, соответственно, в DCs_availability_functions.ps1

$root = $PSScriptRoot  # for debug
. $root\DCs_availability_functions.ps1


# Проверка возвращает два значения - код и его описание. Но тут появляется большая проблема с возможной несинхронностью этих значений в Заббиксе.
# Как вариант, можно засовывать в дискавери, но ради двух значений это городить... Ну и там всё равно бывает не одновременно почему-то
# В итоге, решили ориентировать триггер на текст, а код - ну, просто так рядом для графиков и прочей визуализации будет. Главное, чтобы не одновременно в триггере их использовать.

# Еще раз: при двух запросах, одного параметра и другого, они могут оказаться несогласованными. По-хорошему, результат в заббикс надо отдавать одним куском, а разделять уже на сервере.
# Как разделять - через дискавери или еще можно calculated значения делать... Давайте попробуем второе, они вроде полегче должны быть по производительности


# Вся логика вынесена в функции.

# Определяем список доменов
$DCs = GetDCs -DomainName $env:USERDNSDOMAIN  # имя хоста берем из системной переменной окружения

# Ну, собственно, и запускаем проверки. Прелесть такой двухступенчатой схемы в том, что для тестирования вместо реальных данных можно подсовывать сценарии разнообразных сбоев
$Results = GetDCStatuses $DCs

#$Results  # for debug

# Определяем статус
$ExitStatus = FormGeneralResult $Results


## Отправляем статус в Заббикс

# это был вариант с трапами
#SendOutStatus $ExitStatus

# вариант с обычным айтемом
#$ExitStatus
# Update: неа. Я забыл, что это же объект с двумя полями. В свете размышлений выше, давайте сформируем из кода и описания единую строку.
# То есть,
# [0] OK
# или
# [2] От сервера недоступны все порты на всех контроллерах домена, хотя пинги идут
"[" + $ExitStatus.StatusCode + "] " + $ExitStatus.StatusDescription


